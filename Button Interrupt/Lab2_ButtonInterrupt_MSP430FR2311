#include <msp430.h>

void main(void)
{
WDTCTL = WDTPW + WDTHOLD; // Stop watchdog timer
PM5CTL0 &= ~LOCKLPM5;

P1DIR |= BIT0; // P1.0 as output
P2DIR |= BIT0; //P2.0 as output
P1DIR &= ~BIT1; //sets p1.1 as an input

P1OUT |= BIT0; //starts p1.0 as on LED
P2OUT &= ~BIT0; //starts p2.0 as off led

P1IE |= BIT1; //enables the interrupt for p1.1
P1IES |= BIT1; //detects the falling edge

P1IFG &= ~BIT1; //clears the flag

P1REN |= BIT1; //pullup resistor is high for 1.1
__enable_interrupt();

while (1) // Infinite Loop
{}
}
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    __delay_cycles(500000); //debouncing
    P1OUT ^=BIT0; //Toggles LED on 1.6
    P2OUT ^= BIT0; //Toggles LED on 2
    P1IFG = ~BIT1; //clears the flag

}
