#include <msp430.h> 
int main(void)
{
  WDTCTL = WDTPW + WDTHOLD;     // Stop WDT
  BCSCTL3 = LFXT1S_2;

  P1DIR |= BIT0;            // P1.0 and P1.6 pins output
  P1DIR |= BIT6;


  TA0CCTL0 |= CCIE;                             // CCR0 interrupt enabled
  TA0CTL = TASSEL_2 + MC_3 + ID_3;           // SMCLK/8, up mode
  TA0CCR0 =  0x2000;                     //frequency to blink

  TA1CCTL0 |= CCIE;                             // CCR0 interrupt enabled
  TA1CTL = TASSEL_2 + MC_3 + ID_3;           // SMCLK/8, up mode
  TA1CCR0 =  0x6500;                     //frequency to blink

  _BIS_SR(CPUOFF + GIE);          // low power mode enabled
}

// Timer A0 interrupt service routine
#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer0_A0(void)
{
   P1OUT ^= BIT0;                          // Toggle P1.0
}

// Timer A0 interrupt service routine
#pragma vector=TIMER1_A0_VECTOR
__interrupt void Timer1_A0 (void)
{
   P1OUT ^= BIT6; // Toggle P1.6
}


